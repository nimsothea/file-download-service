<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fi.nls.fileservice</groupId>
	<artifactId>fileservice-parent</artifactId>
	<packaging>pom</packaging>
	<version>1.4.0-SNAPSHOT</version>
	<name>File download service parent POM</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<maven.compiler.showWarnings>true</maven.compiler.showWarnings>
		<maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
		<spring.framework.version>3.2.12.RELEASE</spring.framework.version>
		<modeshape.version>3.8.1.Final</modeshape.version>
		<jackson.version>2.4.2</jackson.version>
		<slf4j.version>1.7.2</slf4j.version>
		<junit.version>4.11</junit.version>
	</properties>
	<organization>
		<name>National Land Survey of Finland</name>
		<url>http://www.maanmittauslaitos.fi</url>
	</organization>
	<licenses>
		<license>
			<name>The MIT License (MIT)</name>
			<url>http://opensource.org/licenses/MIT</url>
		</license>
		<license>
			<name>European Union Public License (EUPL v.1.1)</name>
			<url>https://joinup.ec.europa.eu/software/page/eupl/licence-eupl</url>
		</license>
	</licenses>

	<repositories>
		<repository>
			<id>jboss-releases</id>
			<name>JBoss Release Repository</name>
			<url>http://repository.jboss.org/nexus</url>
		</repository>
	</repositories>

	<modules>
		<module>modeshape-authz</module>
		<module>fileservice</module>
		<module>fileservice-opendata</module>
		<module>fileservice-web</module>
		<module>nls-metadata</module>
		<module>fileservice-war</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<!-- Import the ModeShape BOM for embedded usage. This adds to the "dependenciesManagement" 
				section defaults for all of the modules we might need, but we still have 
				to include in the "dependencies" section the modules we DO need. The benefit 
				is that we don't have to specify the versions of any of those modules. -->
			<dependency>
				<groupId>org.modeshape.bom</groupId>
				<artifactId>modeshape-bom-embedded</artifactId>
				<version>${modeshape.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.3.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- FINDBUGS, High priority, max effort -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<xmlOutput>true</xmlOutput>
					<xmlOutputDirectory>${project.build.directory}/findbugs-reports</xmlOutputDirectory>
					<outputDirectory>${project.build.directory}/findbugs-reports</outputDirectory>
					<classFilesDirectory>${project.build.outputDirectory}</classFilesDirectory>
					<!-- High threshold -->
					<threshold>Default</threshold>
					<effort>Max</effort>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
